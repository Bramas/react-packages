{
  "require": [
    "react",
    "react/addons",
    "react/lib/AutoFocusMixin",
    "react/lib/BeforeInputEventPlugin",
    "react/lib/CSSCore",
    "react/lib/CSSProperty",
    "react/lib/CSSPropertyOperations",
    "react/lib/CallbackQueue",
    "react/lib/ChangeEventPlugin",
    "react/lib/ClientReactRootIndex",
    "react/lib/DOMChildrenOperations",
    "react/lib/DOMProperty",
    "react/lib/DOMPropertyOperations",
    "react/lib/Danger",
    "react/lib/DefaultEventPluginOrder",
    "react/lib/EnterLeaveEventPlugin",
    "react/lib/EventConstants",
    "react/lib/EventListener",
    "react/lib/EventPluginHub",
    "react/lib/EventPluginRegistry",
    "react/lib/EventPluginUtils",
    "react/lib/EventPropagators",
    "react/lib/ExecutionEnvironment",
    "react/lib/FallbackCompositionState",
    "react/lib/HTMLDOMPropertyConfig",
    "react/lib/LinkedStateMixin",
    "react/lib/LinkedValueUtils",
    "react/lib/LocalEventTrapMixin",
    "react/lib/MobileSafariClickEventPlugin",
    "react/lib/Object.assign",
    "react/lib/PooledClass",
    "react/lib/React",
    "react/lib/ReactBrowserComponentMixin",
    "react/lib/ReactBrowserEventEmitter",
    "react/lib/ReactCSSTransitionGroup",
    "react/lib/ReactCSSTransitionGroupChild",
    "react/lib/ReactChildReconciler",
    "react/lib/ReactChildren",
    "react/lib/ReactClass",
    "react/lib/ReactComponent",
    "react/lib/ReactComponentBrowserEnvironment",
    "react/lib/ReactComponentEnvironment",
    "react/lib/ReactComponentWithPureRenderMixin",
    "react/lib/ReactCompositeComponent",
    "react/lib/ReactContext",
    "react/lib/ReactCurrentOwner",
    "react/lib/ReactDOM",
    "react/lib/ReactDOMButton",
    "react/lib/ReactDOMComponent",
    "react/lib/ReactDOMForm",
    "react/lib/ReactDOMIDOperations",
    "react/lib/ReactDOMIframe",
    "react/lib/ReactDOMImg",
    "react/lib/ReactDOMInput",
    "react/lib/ReactDOMOption",
    "react/lib/ReactDOMSelect",
    "react/lib/ReactDOMSelection",
    "react/lib/ReactDOMTextComponent",
    "react/lib/ReactDOMTextarea",
    "react/lib/ReactDefaultBatchingStrategy",
    "react/lib/ReactDefaultInjection",
    "react/lib/ReactDefaultPerf",
    "react/lib/ReactDefaultPerfAnalysis",
    "react/lib/ReactElement",
    "react/lib/ReactElementValidator",
    "react/lib/ReactEmptyComponent",
    "react/lib/ReactErrorUtils",
    "react/lib/ReactEventEmitterMixin",
    "react/lib/ReactEventListener",
    "react/lib/ReactFragment",
    "react/lib/ReactInjection",
    "react/lib/ReactInputSelection",
    "react/lib/ReactInstanceHandles",
    "react/lib/ReactInstanceMap",
    "react/lib/ReactLifeCycle",
    "react/lib/ReactLink",
    "react/lib/ReactMarkupChecksum",
    "react/lib/ReactMount",
    "react/lib/ReactMultiChild",
    "react/lib/ReactMultiChildUpdateTypes",
    "react/lib/ReactNativeComponent",
    "react/lib/ReactOwner",
    "react/lib/ReactPerf",
    "react/lib/ReactPropTransferer",
    "react/lib/ReactPropTypeLocationNames",
    "react/lib/ReactPropTypeLocations",
    "react/lib/ReactPropTypes",
    "react/lib/ReactPutListenerQueue",
    "react/lib/ReactReconcileTransaction",
    "react/lib/ReactReconciler",
    "react/lib/ReactRef",
    "react/lib/ReactRootIndex",
    "react/lib/ReactServerRendering",
    "react/lib/ReactServerRenderingTransaction",
    "react/lib/ReactStateSetters",
    "react/lib/ReactTestUtils",
    "react/lib/ReactTransitionChildMapping",
    "react/lib/ReactTransitionEvents",
    "react/lib/ReactTransitionGroup",
    "react/lib/ReactUpdateQueue",
    "react/lib/ReactUpdates",
    "react/lib/ReactWithAddons",
    "react/lib/SVGDOMPropertyConfig",
    "react/lib/SelectEventPlugin",
    "react/lib/ServerReactRootIndex",
    "react/lib/SimpleEventPlugin",
    "react/lib/SyntheticClipboardEvent",
    "react/lib/SyntheticCompositionEvent",
    "react/lib/SyntheticDragEvent",
    "react/lib/SyntheticEvent",
    "react/lib/SyntheticFocusEvent",
    "react/lib/SyntheticInputEvent",
    "react/lib/SyntheticKeyboardEvent",
    "react/lib/SyntheticMouseEvent",
    "react/lib/SyntheticTouchEvent",
    "react/lib/SyntheticUIEvent",
    "react/lib/SyntheticWheelEvent",
    "react/lib/Transaction",
    "react/lib/ViewportMetrics",
    "react/lib/accumulateInto",
    "react/lib/adler32",
    "react/lib/camelize",
    "react/lib/camelizeStyleName",
    "react/lib/cloneWithProps",
    "react/lib/containsNode",
    "react/lib/createArrayFromMixed",
    "react/lib/createFullPageComponent",
    "react/lib/createNodesFromMarkup",
    "react/lib/cx",
    "react/lib/dangerousStyleValue",
    "react/lib/emptyFunction",
    "react/lib/emptyObject",
    "react/lib/escapeTextContentForBrowser",
    "react/lib/findDOMNode",
    "react/lib/flattenChildren",
    "react/lib/focusNode",
    "react/lib/forEachAccumulated",
    "react/lib/getActiveElement",
    "react/lib/getEventCharCode",
    "react/lib/getEventKey",
    "react/lib/getEventModifierState",
    "react/lib/getEventTarget",
    "react/lib/getIteratorFn",
    "react/lib/getMarkupWrap",
    "react/lib/getNodeForCharacterOffset",
    "react/lib/getReactRootElementInContainer",
    "react/lib/getTextContentAccessor",
    "react/lib/getUnboundedScrollPosition",
    "react/lib/hyphenate",
    "react/lib/hyphenateStyleName",
    "react/lib/instantiateReactComponent",
    "react/lib/invariant",
    "react/lib/isEventSupported",
    "react/lib/isNode",
    "react/lib/isTextInputElement",
    "react/lib/isTextNode",
    "react/lib/joinClasses",
    "react/lib/keyMirror",
    "react/lib/keyOf",
    "react/lib/mapObject",
    "react/lib/memoizeStringOnly",
    "react/lib/onlyChild",
    "react/lib/performance",
    "react/lib/performanceNow",
    "react/lib/quoteAttributeValueForBrowser",
    "react/lib/setInnerHTML",
    "react/lib/setTextContent",
    "react/lib/shallowEqual",
    "react/lib/shouldUpdateReactComponent",
    "react/lib/toArray",
    "react/lib/traverseAllChildren",
    "react/lib/update",
    "react/lib/warning"
  ],
  "transforms": {
    "browserify-replace-g": {
      "global": true,
      "replace": [
        { "from": "Object\\.create", "to": "Object_create" },
        { "from": "Object\\.freeze", "to": "Object_freeze" },
        { "from": "process\\.env\\.NODE_ENV", "to": "'production'" }
      ]
    }
  }
}
